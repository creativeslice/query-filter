{"version":3,"file":"post-type/index.js","mappings":"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","sources":["webpack://query-filter/./src/post-type/edit.js","webpack://query-filter/external window [\"wp\",\"blockEditor\"]","webpack://query-filter/external window [\"wp\",\"blocks\"]","webpack://query-filter/external window [\"wp\",\"components\"]","webpack://query-filter/external window [\"wp\",\"data\"]","webpack://query-filter/external window [\"wp\",\"i18n\"]","webpack://query-filter/external window \"ReactJSXRuntime\"","webpack://query-filter/webpack/bootstrap","webpack://query-filter/webpack/runtime/compat get default export","webpack://query-filter/webpack/runtime/define property getters","webpack://query-filter/webpack/runtime/hasOwnProperty shorthand","webpack://query-filter/webpack/runtime/make namespace object","webpack://query-filter/./src/post-type/index.js"],"sourcesContent":["import { __ } from '@wordpress/i18n';\nimport { useBlockProps, InspectorControls } from '@wordpress/block-editor';\nimport { PanelBody, TextControl, ToggleControl } from '@wordpress/components';\nimport { useSelect } from '@wordpress/data';\n\nexport default function Edit( { attributes, setAttributes, context } ) {\n\tconst { emptyLabel, label, showLabel } = attributes;\n\n\tconst allPostTypes = useSelect( ( select ) => {\n\t\treturn (\n\t\t\t( select( 'core' ).getPostTypes( { per_page: 100 } ) || [] ).filter(\n\t\t\t\t( type ) => type.viewable\n\t\t\t) || []\n\t\t);\n\t}, [] );\n\n\tlet contextPostTypes = ( context.query.postType || '' )\n\t\t.split( ',' )\n\t\t.map( ( type ) => type.trim() );\n\n\t// Support for enhanced query loop block plugin.\n\tif ( Array.isArray( context.query.multiple_posts ) ) {\n\t\tcontextPostTypes = contextPostTypes.concat(\n\t\t\tcontext.query.multiple_posts\n\t\t);\n\t}\n\n\tconst postTypes = contextPostTypes.map( ( postType ) => {\n\t\treturn (\n\t\t\tallPostTypes.find( ( type ) => type.slug === postType ) || {\n\t\t\t\tslug: postType,\n\t\t\t\tname: postType,\n\t\t\t}\n\t\t);\n\t} );\n\n\treturn (\n\t\t<>\n\t\t\t<InspectorControls>\n\t\t\t\t<PanelBody title={ __( 'Post Type Settings', 'query-filter' ) }>\n\t\t\t\t\t<TextControl\n\t\t\t\t\t\tlabel={ __( 'Label', 'query-filter' ) }\n\t\t\t\t\t\tvalue={ label }\n\t\t\t\t\t\tdefaultValue={ __( 'Content Type', 'query-filter' ) }\n\t\t\t\t\t\thelp={ __(\n\t\t\t\t\t\t\t'If empty then no label will be shown',\n\t\t\t\t\t\t\t'query-filter'\n\t\t\t\t\t\t) }\n\t\t\t\t\t\tonChange={ ( label ) => setAttributes( { label } ) }\n\t\t\t\t\t/>\n\t\t\t\t\t<ToggleControl\n\t\t\t\t\t\tlabel={ __( 'Show Label', 'query-filter' ) }\n\t\t\t\t\t\tchecked={ showLabel }\n\t\t\t\t\t\tonChange={ ( showLabel ) =>\n\t\t\t\t\t\t\tsetAttributes( { showLabel } )\n\t\t\t\t\t\t}\n\t\t\t\t\t/>\n\t\t\t\t\t<TextControl\n\t\t\t\t\t\tlabel={ __( 'Empty Choice Label', 'query-filter' ) }\n\t\t\t\t\t\tvalue={ emptyLabel }\n\t\t\t\t\t\tplaceholder={ __( 'All', 'query-filter' ) }\n\t\t\t\t\t\tonChange={ ( emptyLabel ) =>\n\t\t\t\t\t\t\tsetAttributes( { emptyLabel } )\n\t\t\t\t\t\t}\n\t\t\t\t\t/>\n\t\t\t\t</PanelBody>\n\t\t\t</InspectorControls>\n\t\t\t<div { ...useBlockProps( { className: 'wp-block-query-filter' } ) }>\n\t\t\t\t{ showLabel && (\n\t\t\t\t\t<label className=\"wp-block-query-filter-post-type__label wp-block-query-filter__label\">\n\t\t\t\t\t\t{ label || __( 'Content Type', 'query-filter' ) }\n\t\t\t\t\t</label>\n\t\t\t\t) }\n\t\t\t\t<select\n\t\t\t\t\tclassName=\"wp-block-query-filter-post-type__select wp-block-query-filter__select\"\n\t\t\t\t\tinert\n\t\t\t\t>\n\t\t\t\t\t<option>\n\t\t\t\t\t\t{ emptyLabel || __( 'All', 'query-filter' ) }\n\t\t\t\t\t</option>\n\t\t\t\t\t{ postTypes.map( ( type ) => (\n\t\t\t\t\t\t<option key={ type.slug }>{ type.name }</option>\n\t\t\t\t\t) ) }\n\t\t\t\t</select>\n\t\t\t</div>\n\t\t</>\n\t);\n}\n","module.exports = window[\"wp\"][\"blockEditor\"];","module.exports = window[\"wp\"][\"blocks\"];","module.exports = window[\"wp\"][\"components\"];","module.exports = window[\"wp\"][\"data\"];","module.exports = window[\"wp\"][\"i18n\"];","module.exports = window[\"ReactJSXRuntime\"];","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","// getDefaultExport function for compatibility with non-harmony modules\n__webpack_require__.n = (module) => {\n\tvar getter = module && module.__esModule ?\n\t\t() => (module['default']) :\n\t\t() => (module);\n\t__webpack_require__.d(getter, { a: getter });\n\treturn getter;\n};","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","// define __esModule on exports\n__webpack_require__.r = (exports) => {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","import { registerBlockType } from '@wordpress/blocks';\nimport Edit from './edit';\nimport metadata from './block.json';\n\nregisterBlockType( metadata.name, {\n\t/**\n\t * @see ./edit.js\n\t */\n\tedit: Edit,\n} );\n"],"names":["__","useBlockProps","InspectorControls","PanelBody","TextControl","ToggleControl","useSelect","jsx","_jsx","jsxs","_jsxs","Fragment","_Fragment","Edit","attributes","setAttributes","context","emptyLabel","label","showLabel","allPostTypes","select","getPostTypes","per_page","filter","type","viewable","contextPostTypes","query","postType","split","map","trim","Array","isArray","multiple_posts","concat","postTypes","find","slug","name","children","title","value","defaultValue","help","onChange","checked","placeholder","className","inert","registerBlockType","metadata","edit"],"sourceRoot":""}